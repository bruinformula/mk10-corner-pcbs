/*
 * sensor_read_helpers.c
 *
 *  Created on: Apr 7, 2025
 *      Author: antho
 */

#include "sensor_read_helpers.h"

void readLinearPotentiometer(ADC_HandleTypeDef *hadc, uint32_t *lastReadMS,  MISC_DATAFRAME *dataframe) {
	uint32_t ADC_Read[1];
	uint32_t ADC_BUFFER = 1;

	HAL_ADC_PollForConversion(&hadc, 100);
	ADC_Read[0] = HAL_ADC_GetValue(&hadc);

	HAL_ADC_Start_DMA(hadc, ADC_Read, ADC_BUFFER);
	if(HAL_GetTick() - *lastReadMS > SHOCK_TRAVEL_SAMPLE_PERIOD){
		dataframe->data.shockTravel = ADC_Read[0];

		*lastReadMS = HAL_GetTick();
	}

	//todo: convert counts to travel
}

void readBrakeTemp(uint32_t *lastReadMS, MISC_DATAFRAME *dataframe) {

	if(HAL_GetTick() - *lastReadMS > BRAKE_TEMP_SAMPLE_PERIOD){
		dataframe->data.brakeTemp = 0;
		//todo: actual brake temp sensor read code
		*lastReadMS = HAL_GetTick();
	}

	//todo: convert to deg C
}

void readTireTemp(uint32_t *lastReadMS, TTEMP_DATAFRAME *dataframes) {

	if(HAL_GetTick() - *lastReadMS > TIRE_TEMP_SAMPLE_PERIOD){
		for(int i = 0; i < 4; i++) {
			dataframes[i].data.pix0 = 1 + (4*i);
			dataframes[i].data.pix1 = 2 + (4*i);
			dataframes[i].data.pix2 = 3 + (4*i);
			dataframes[i].data.pix3 = 4 + (4*i);
			dataframes[i].data.pix4 = 5 + (4*i);
			dataframes[i].data.pix5 = 6 + (4*i);
			dataframes[i].data.pix6 = 7 + (4*i);
			dataframes[i].data.pix7 = 8 + (4*i);
		}


		//todo: actual tire temp sensor read code
		*lastReadMS = HAL_GetTick();
	}
}
void readStrainGauges(SPI_HandleTypeDef *hspi, uint32_t *lastReadMS, SG_DATAFRAME *dataframe) {


	if(HAL_GetTick() - *lastReadMS > STRAIN_GAUGE_SAMPLE_PERIOD){
		dataframe->data.SG0 = 0;
		dataframe->data.SG1 = 0;
		dataframe->data.SG2 = 0;
		dataframe->data.SG3 = 0;

		//todo: actual strain gauge sensor read code
		//todo: convert counts to newtons
		*lastReadMS = HAL_GetTick();
	}
}

void readWheelSpeed(uint32_t *lastReadMS, MISC_DATAFRAME *dataframe) {

	if(HAL_GetTick() - *lastReadMS > WHEEL_SPEED_SAMPLE_PERIOD){

		uint8_t prevWHSLogicLevel = GPIO_PIN_RESET;




		uint8_t edges = 0;
		uint8_t readBeginMS = HAL_GetTick(); //possilbly a good idea to lower tick period to like 10us or sth
		for (int i = 0; i < 1000; i++) {//burst read 100 values real quick, find how many times polarity switches

			/* if whs pin is logic high and prev_whs_logic_level is opposite, add one to edges */

			if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4) != prevWHSLogicLevel) {
				edges++;
				prevWHSLogicLevel = !prevWHSLogicLevel;
			}
		}

		uint8_t readEndMS = HAL_GetTick();


		//convert to rpm
		/*
		 * edges/msec * 1/(edges/rotation) * msec/sec = rotations/msec
		 * 1/(edges/rotation) * msec/sec = 1/24 * 1/1000 =
		 */
		dataframe->data.wheelRPM = ( ((float)(edges)) / ((float)(readEndMS)-(float)(readBeginMS)) ) * (float)(1/24000);
		printf("%d", (double) dataframe->data.wheelRPM*1000.0);


		*lastReadMS = HAL_GetTick();
	}
}

void readBoardTemp(SPI_HandleTypeDef *hspi, uint32_t *lastReadMS, MISC_DATAFRAME *dataframe) {

	if(HAL_GetTick() - *lastReadMS > STRAIN_GAUGE_SAMPLE_PERIOD){
		dataframe->data.boardTemp = 0;


		//todo: use ads1118, same chip as the shits, to read board temp
		//todo: convert counts to deg.C
		*lastReadMS = HAL_GetTick();
	}
}
